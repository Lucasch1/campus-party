const axios = require('axios');
const fs = require('fs');
const { NEXT_PUBLIC_PINATA_API_KEY, NEXT_PUBLIC_PINATA_SECRET_API_KEY } = process.env;

const pinataSDK = require('@pinata/sdk');
const pinata = new pinataSDK(NEXT_PUBLIC_PINATA_API_KEY, NEXT_PUBLIC_PINATA_SECRET_API_KEY);

export default async function serverImageIa(req, res) {
    let config = {
        method: 'get',
        maxBodyLength: Infinity,
        url: 'https://api.pexels.com/v1/search?query=nature&per_page=10',
        headers: {
            Authorization: 'xK2iLSTkycvGqy7qOONh7y0D1N29pXKMp7fxkugqFvrmDNVfalT9I8JJ',
            Cookie: '__cf_bm=ghvRlBXXPaVpSUdEADRth_n3BmC6oI99TwfAELrY.LU-1690589162-0-AcXQLeNng3EES5ixIG7WZKquK1F5t3wSRrIvrp2ApvB5VgHAF2pwezobbRTAxXfJIttT09ojObgwBpOsYVoIwss=',
        },
    };

    await axios
        .request(config)
        .then((response) => {
            // console.log(JSON.stringify(response.data));
            const numeroAleatorio = Math.floor(Math.random() * 11);
            // console.log(numeroAleatorio);
            const obj = {
                name: `MidasChest-${numeroAleatorio}`,
                description: 'Image generated by IA',
                image: response.data.photos[numeroAleatorio].src.original,
            };
            console.log(obj);
            const json = JSON.stringify(obj);
            const caminhoArquivo = './public/ia.json';

            // Salvar a string JSON no arquivo
            fs.writeFileSync(caminhoArquivo, json, 'utf-8');

            const options = {
                pinataMetadata: {
                    name: `MidasChest-${numeroAleatorio}`,
                },
            };

            const leituraStream = fs.createReadStream(caminhoArquivo);
            leituraStream.on('end', () => {
                console.log('Arquivo copiado com sucesso!');
            });
            leituraStream.on('error', (erro) => {
                console.error('Ocorreu um erro ao copiar o arquivo:', erro);
            });

            pinata
                .pinFileToIPFS(leituraStream, options)
                .then((result) => {
                    console.log(result);

                    res.status(200).json({ resultado: result });
                })
                .catch((err) => {
                    console.log(err);
                    res.status(500).json({ error: err });
                });
        })
        .catch((error) => {
            console.log(error);
            res.status(500).json({ erro: error });
        });
}
